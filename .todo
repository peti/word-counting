<todo version="0.1.19">
    <note priority="high" time="1100292664" done="1108063803">
        get rid of child repo in here
        <comment>
            done
        </comment>
    </note>
    <note priority="medium" time="1097266796" done="1098591003">
        Ignore SIGPIPE.
        <comment>
            Nope, the user's code should do that.
        </comment>
    </note>
    <note priority="medium" time="1097367726" done="1098590991">
        Use DynamicExceptions for timeouts.
        <comment>
            Unnecessary. userError works fine.
        </comment>
    </note>
    <note priority="medium" time="1097379334" done="1098590956">
        Re-write handlers as StateT monads.
        <comment>
            done
        </comment>
    </note>
    <note priority="medium" time="1098590984" done="1100292114">
        Adapt tutorial.lhs to new API.
        <comment>
            Cannot really adapt it. I'd have to rewrite it.
            So it's gone for now.
        </comment>
    </note>
    <note priority="medium" time="1107087391" done="1107740743">
        Rewrite splitBy with unfoldr.

          splitListOn :: Eq a =&gt; a -&gt; [a] -&gt; [[a]]
          splitListOn delimiter =
              unfoldr splitter . (delimiter :)
              where
              splitter [] = Nothing
              splitter xs = Just (span (/= delimiter) (tail xs))
        <comment>
            Replaced splitBy by Data.List.splitList.
        </comment>
    </note>
    <note priority="low" time="1098732703" done="1107740776">
        Define a raiseTimeout function.

        I need a special function which raises the exception
        so that isTimeout recognizes it. Or maybe I don't
        need it because noone but my code raises them
        anyway. User code will typically raise write errors,
        not read errors, so that exception would look
        different anyway. Maybe this whole timeout thing
        should be implemented in the Child library anyway?
        <comment>
            Use dynamic exceptions instead.
        </comment>
    </note>
    <note priority="high" time="1110407303">
        set optimizer flags in cabal file
    </note>
    <note priority="high" time="1128887908">
        solve copyright issue: we go all-permissive
    </note>
    <note priority="high" time="1144463419">
        hide example files from haddock
    </note>
    <note priority="medium" time="1098590969">
        add TokenHandler with LineHandler as a special case
    </note>
    <note priority="medium" time="1099252906">
        add generic runFromList combinator to test BlockHandlers
    </note>
</todo>
